
Line 1: type_specifier : INT

Line 2: type_specifier : INT

Line 2: declaration_list : ID LTHIRD CONST_INT RTHIRD
a
2

Line 2: declaration_list : declaration_list COMMA ID
c

Line 2: declaration_list : declaration_list COMMA ID
i

Line 2: declaration_list : declaration_list COMMA ID
j

Line 2: var_declaration : type_specifier declaration_list SEMICOLON

Line 2: statement : var_declaration

Line 2: statements : statement

Line 2: type_specifier : FLOAT

Line 2: declaration_list : ID
d

Line 2: var_declaration : type_specifier declaration_list SEMICOLON

Line 2: statement : var_declaration

Line 2: statements : statements statement

Line 3: variable : ID
d

Line 3: factor : CONST_FLOAT
3.14159

Line 3: unary_expression : factor

Line 3: term : unary_expression

Line 3: simple_expression : term

Line 3: rel_expression : simple_expression

Line 3: logic_expression : rel_expression

Line 3: expression : variable ASSIGNOP logic_expression

 ScopeTable # 2
 4 --> < a , ID , { -1, -1 }>
 6 --> < c , ID , -1e+007>
 7 --> < d , ID , 3.14159>
 12 --> < i , ID , -1e+007>
 13 --> < j , ID , -1e+007>

 ScopeTable # 1
 18 --> < main , ID > 


Line 3: expression_statement : expression SEMICOLON

Line 3: statement : expression_statement

Line 3: statements : statements statement

Line 4: factor : CONST_INT
0

Line 4: unary_expression : factor

Line 4: term : unary_expression

Line 4: simple_expression : term

Line 4: rel_expression : simple_expression

Line 4: logic_expression : rel_expression

Line 4: expression : logic_expression

Line 4: variable : ID LTHIRD expression RTHIRD
a

Line 4: factor : CONST_INT
1

Line 4: unary_expression : factor

Line 4: term : unary_expression

Line 4: simple_expression : term

Line 4: rel_expression : simple_expression

Line 4: logic_expression : rel_expression

Line 4: expression : variable ASSIGNOP logic_expression

 ScopeTable # 2
 4 --> < a , ID , { 1, -1 }>
 6 --> < c , ID , -1e+007>
 7 --> < d , ID , 3.14159>
 12 --> < i , ID , -1e+007>
 13 --> < j , ID , -1e+007>

 ScopeTable # 1
 18 --> < main , ID > 


Line 4: expression_statement : expression SEMICOLON

Line 4: statement : expression_statement

Line 4: statements : statements statement

Line 5: factor : CONST_INT
1

Line 5: unary_expression : factor

Line 5: term : unary_expression

Line 5: simple_expression : term

Line 5: rel_expression : simple_expression

Line 5: logic_expression : rel_expression

Line 5: expression : logic_expression

Line 5: variable : ID LTHIRD expression RTHIRD
a

Line 5: factor : CONST_INT
5

Line 5: unary_expression : factor

Line 5: term : unary_expression

Line 5: simple_expression : term

Line 5: rel_expression : simple_expression

Line 5: logic_expression : rel_expression

Line 5: expression : variable ASSIGNOP logic_expression

 ScopeTable # 2
 4 --> < a , ID , { 1, 5 }>
 6 --> < c , ID , -1e+007>
 7 --> < d , ID , 3.14159>
 12 --> < i , ID , -1e+007>
 13 --> < j , ID , -1e+007>

 ScopeTable # 1
 18 --> < main , ID > 


Line 5: expression_statement : expression SEMICOLON

Line 5: statement : expression_statement

Line 5: statements : statements statement

Line 6: variable : ID
i

Line 6: factor : CONST_INT
0

Line 6: unary_expression : factor

Line 6: term : unary_expression

Line 6: simple_expression : term

Line 6: rel_expression : simple_expression

Line 6: logic_expression : rel_expression

Line 6: expression : variable ASSIGNOP logic_expression

 ScopeTable # 2
 4 --> < a , ID , { 1, 5 }>
 6 --> < c , ID , -1e+007>
 7 --> < d , ID , 3.14159>
 12 --> < i , ID , 0>
 13 --> < j , ID , -1e+007>

 ScopeTable # 1
 18 --> < main , ID > 


Line 6: expression_statement : expression SEMICOLON

Line 6: variable : ID
i

Line 6: factor : variable

Line 6: unary_expression : factor

Line 6: term : unary_expression

Line 6: simple_expression : term

Line 6: factor : CONST_INT
2

Line 6: unary_expression : factor

Line 6: term : unary_expression

Line 6: simple_expression : term

Line 6: rel_expression : simple_expression RELOP simple_expression

Line 6: logic_expression : rel_expression

Line 6: expression : logic_expression

Line 6: expression_statement : expression SEMICOLON

Line 6: variable : ID
i

Line 6: variable : ID
i

Line 6: factor : variable

Line 6: unary_expression : factor

Line 6: term : unary_expression

Line 6: simple_expression : term

Line 6: factor : CONST_INT
1

Line 6: unary_expression : factor

Line 6: term : unary_expression

Line 6: simple_expression : simple_expression ADDOP term

Line 6: rel_expression : simple_expression

Line 6: logic_expression : rel_expression

Line 6: expression : variable ASSIGNOP logic_expression

 ScopeTable # 2
 4 --> < a , ID , { 1, 5 }>
 6 --> < c , ID , -1e+007>
 7 --> < d , ID , 3.14159>
 12 --> < i , ID , 1>
 13 --> < j , ID , -1e+007>

 ScopeTable # 1
 18 --> < main , ID > 


Line 7: variable : ID
i

Line 7: factor : variable

Line 7: unary_expression : factor

Line 7: term : unary_expression

Line 7: simple_expression : term

Line 7: factor : CONST_INT
0

Line 7: unary_expression : factor

Line 7: term : unary_expression

Line 7: simple_expression : term

Line 7: rel_expression : simple_expression RELOP simple_expression

Line 7: logic_expression : rel_expression

Line 7: expression : logic_expression

Line 8: factor : CONST_INT
0

Line 8: unary_expression : factor

Line 8: term : unary_expression

Line 8: simple_expression : term

Line 8: rel_expression : simple_expression

Line 8: logic_expression : rel_expression

Line 8: expression : logic_expression

Line 8: variable : ID LTHIRD expression RTHIRD
a

Line 8: factor : CONST_INT
8

Line 8: unary_expression : factor

Line 8: term : unary_expression

Line 8: simple_expression : term

Line 8: variable : ID
i

Line 8: factor : variable

Line 8: unary_expression : factor

Line 8: term : unary_expression

Line 8: simple_expression : simple_expression ADDOP term

Line 8: rel_expression : simple_expression

Line 8: logic_expression : rel_expression

Line 8: expression : variable ASSIGNOP logic_expression

 ScopeTable # 3

 ScopeTable # 2
 4 --> < a , ID , { 9, 5 }>
 6 --> < c , ID , -1e+007>
 7 --> < d , ID , 3.14159>
 12 --> < i , ID , 1>
 13 --> < j , ID , -1e+007>

 ScopeTable # 1
 18 --> < main , ID > 


Line 8: expression_statement : expression SEMICOLON

Line 8: statement : expression_statement

Line 10: factor : CONST_INT
1

Line 10: unary_expression : factor

Line 10: term : unary_expression

Line 10: simple_expression : term

Line 10: rel_expression : simple_expression

Line 10: logic_expression : rel_expression

Line 10: expression : logic_expression

Line 10: variable : ID LTHIRD expression RTHIRD
a

Line 10: factor : CONST_INT
7

Line 10: unary_expression : factor

Line 10: term : unary_expression

Line 10: variable : ID
i

Line 10: factor : variable

Line 10: unary_expression : factor

Line 10: term : term MULOP unary_expression

Line 10: simple_expression : term

Line 10: rel_expression : simple_expression

Line 10: logic_expression : rel_expression

Line 10: expression : variable ASSIGNOP logic_expression

 ScopeTable # 3

 ScopeTable # 2
 4 --> < a , ID , { 9, 7 }>
 6 --> < c , ID , -1e+007>
 7 --> < d , ID , 3.14159>
 12 --> < i , ID , 1>
 13 --> < j , ID , -1e+007>

 ScopeTable # 1
 18 --> < main , ID > 


Line 10: expression_statement : expression SEMICOLON

Line 10: statement : expression_statement

Line 10: statement : IF LPAREN expression RPAREN statement ELSE statement

Line 10: statements : statement

Line 11: compound_statement : LCURL statements RCURL

 ScopeTable # 3

 ScopeTable # 2
 4 --> < a , ID , { 9, 7 }>
 6 --> < c , ID , -1e+007>
 7 --> < d , ID , 3.14159>
 12 --> < i , ID , 1>
 13 --> < j , ID , -1e+007>

 ScopeTable # 1
 18 --> < main , ID > 

Line 11: statement : compound_statement

Line 11: statement : FOR LPAREN expression_statement expression_statement expression RPAREN statement

Line 11: statements : statements statement

Line 12: variable : ID
c

Line 12: factor : CONST_INT
2

Line 12: unary_expression : factor

Line 12: term : unary_expression

Line 12: simple_expression : term

Line 12: rel_expression : simple_expression

Line 12: logic_expression : rel_expression

Line 12: expression : variable ASSIGNOP logic_expression

 ScopeTable # 2
 4 --> < a , ID , { 9, 7 }>
 6 --> < c , ID , 2>
 7 --> < d , ID , 3.14159>
 12 --> < i , ID , 1>
 13 --> < j , ID , -1e+007>

 ScopeTable # 1
 18 --> < main , ID > 


Line 12: expression_statement : expression SEMICOLON

Line 12: statement : expression_statement

Line 12: statements : statements statement

Line 13: variable : ID
i

Line 13: variable : ID
c

Line 13: factor : variable

Line 13: unary_expression : factor

Line 13: term : unary_expression

Line 13: factor : CONST_INT
5

Line 13: unary_expression : factor

Line 13: term : term MULOP unary_expression

Line 13: factor : CONST_INT
1

Line 13: unary_expression : factor

Line 13: term : unary_expression

Line 13: simple_expression : term

Line 13: factor : CONST_INT
3

Line 13: unary_expression : factor

Line 13: term : unary_expression

Line 13: simple_expression : term

Line 13: rel_expression : simple_expression RELOP simple_expression

Line 13: factor : CONST_INT
9

Line 13: unary_expression : factor

Line 13: term : unary_expression

Line 13: simple_expression : term

Line 13: rel_expression : simple_expression

Line 13: logic_expression : rel_expression LOGICOP rel_expression

Line 13: expression : logic_expression

Line 13: factor : LPAREN expression RPAREN

Line 13: unary_expression : factor

Line 13: term : term MULOP unary_expression

Line 13: simple_expression : term

Line 13: rel_expression : simple_expression

Line 13: logic_expression : rel_expression

Line 13: expression : variable ASSIGNOP logic_expression

 ScopeTable # 2
 4 --> < a , ID , { 9, 7 }>
 6 --> < c , ID , 2>
 7 --> < d , ID , 3.14159>
 12 --> < i , ID , 10>
 13 --> < j , ID , -1e+007>

 ScopeTable # 1
 18 --> < main , ID > 


Line 13: expression_statement : expression SEMICOLON

Line 13: statement : expression_statement

Line 13: statements : statements statement

Line 14: variable : ID
j

Line 14: factor : CONST_INT
10

Line 14: unary_expression : factor

Line 14: term : unary_expression

Line 14: simple_expression : term

Line 14: rel_expression : simple_expression

Line 14: logic_expression : rel_expression

Line 14: expression : variable ASSIGNOP logic_expression

 ScopeTable # 2
 4 --> < a , ID , { 9, 7 }>
 6 --> < c , ID , 2>
 7 --> < d , ID , 3.14159>
 12 --> < i , ID , 10>
 13 --> < j , ID , 10>

 ScopeTable # 1
 18 --> < main , ID > 


Line 14: expression_statement : expression SEMICOLON

Line 14: statement : expression_statement

Line 14: statements : statements statement

Line 15: factor : CONST_INT
0

Line 15: unary_expression : factor

Line 15: term : unary_expression

Line 15: simple_expression : term

Line 15: rel_expression : simple_expression

Line 15: logic_expression : rel_expression

Line 15: expression : logic_expression

Line 15: statement : RETURN expression SEMICOLON

Line 15: statements : statements statement

Line 16: compound_statement : LCURL statements RCURL

 ScopeTable # 2
 4 --> < a , ID , { 9, 7 }>
 6 --> < c , ID , 2>
 7 --> < d , ID , 3.14159>
 12 --> < i , ID , 10>
 13 --> < j , ID , 10>

 ScopeTable # 1
 18 --> < main , ID > 

Line 16: func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement
main

Line 16: unit : func_definition

Line 16: program : unit

Total Lines: 17

Total Errors: 0

