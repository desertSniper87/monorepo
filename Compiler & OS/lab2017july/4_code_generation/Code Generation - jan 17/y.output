Terminals unused in grammar

   DO
   INT
   FLOAT
   DOUBLE
   CHAR
   VOID
   BREAK
   SWITCH
   CASE
   DEFAULT
   CONTINUE
   COMMA
   DECOP
   MAIN


Grammar

    0 $accept: Program $end

    1 Program: compound_statement

    2 compound_statement: LCURL statements RCURL
    3                   | LCURL RCURL

    4 statements: statement
    5           | statements statement

    6 statement: expression_statement
    7          | compound_statement
    8          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
    9          | IF LPAREN expression RPAREN statement
   10          | IF LPAREN expression RPAREN statement ELSE statement
   11          | WHILE LPAREN expression RPAREN statement
   12          | PRINTLN LPAREN ID RPAREN SEMICOLON
   13          | RETURN expression SEMICOLON

   14 expression_statement: SEMICOLON
   15                     | expression SEMICOLON

   16 variable: ID
   17         | ID LTHIRD expression RTHIRD

   18 expression: logic_expression
   19           | variable ASSIGNOP logic_expression

   20 logic_expression: rel_expression
   21                 | rel_expression LOGICOP rel_expression

   22 rel_expression: simple_expression
   23               | simple_expression RELOP simple_expression

   24 simple_expression: term
   25                  | simple_expression ADDOP term

   26 term: unary_expression
   27     | term MULOP unary_expression

   28 unary_expression: ADDOP unary_expression
   29                 | NOT unary_expression
   30                 | factor

   31 factor: variable
   32       | LPAREN expression RPAREN
   33       | CONST_INT
   34       | CONST_FLOAT
   35       | variable INCOP


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 9 10
ELSE (259) 10
FOR (260) 8
WHILE (261) 11
DO (262)
INT (263)
FLOAT (264)
DOUBLE (265)
CHAR (266)
RETURN (267) 13
VOID (268)
BREAK (269)
SWITCH (270)
CASE (271)
DEFAULT (272)
CONTINUE (273)
ADDOP (274) 25 28
MULOP (275) 27
ASSIGNOP (276) 19
RELOP (277) 23
LOGICOP (278) 21
SEMICOLON (279) 12 13 14 15
COMMA (280)
LPAREN (281) 8 9 10 11 12 32
RPAREN (282) 8 9 10 11 12 32
LCURL (283) 2 3
RCURL (284) 2 3
LTHIRD (285) 17
RTHIRD (286) 17
INCOP (287) 35
DECOP (288)
CONST_INT (289) 33
CONST_FLOAT (290) 34
ID (291) 12 16 17
NOT (292) 29
PRINTLN (293) 12
MAIN (294)
THEN (295)


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
Program (42)
    on left: 1, on right: 0
compound_statement (43)
    on left: 2 3, on right: 1 7
statements (44)
    on left: 4 5, on right: 2 5
statement (45)
    on left: 6 7 8 9 10 11 12 13, on right: 4 5 8 9 10 11
expression_statement (46)
    on left: 14 15, on right: 6 8
variable (47)
    on left: 16 17, on right: 19 31 35
expression (48)
    on left: 18 19, on right: 8 9 10 11 13 15 17 32
logic_expression (49)
    on left: 20 21, on right: 18 19
rel_expression (50)
    on left: 22 23, on right: 20 21
simple_expression (51)
    on left: 24 25, on right: 22 23 25
term (52)
    on left: 26 27, on right: 24 25 27
unary_expression (53)
    on left: 28 29 30, on right: 26 27 28 29
factor (54)
    on left: 31 32 33 34 35, on right: 30


State 0

    0 $accept: . Program $end

    LCURL  shift, and go to state 1

    Program             go to state 2
    compound_statement  go to state 3


State 1

    2 compound_statement: LCURL . statements RCURL
    3                   | LCURL . RCURL

    IF           shift, and go to state 4
    FOR          shift, and go to state 5
    WHILE        shift, and go to state 6
    RETURN       shift, and go to state 7
    ADDOP        shift, and go to state 8
    SEMICOLON    shift, and go to state 9
    LPAREN       shift, and go to state 10
    LCURL        shift, and go to state 1
    RCURL        shift, and go to state 11
    CONST_INT    shift, and go to state 12
    CONST_FLOAT  shift, and go to state 13
    ID           shift, and go to state 14
    NOT          shift, and go to state 15
    PRINTLN      shift, and go to state 16

    compound_statement    go to state 17
    statements            go to state 18
    statement             go to state 19
    expression_statement  go to state 20
    variable              go to state 21
    expression            go to state 22
    logic_expression      go to state 23
    rel_expression        go to state 24
    simple_expression     go to state 25
    term                  go to state 26
    unary_expression      go to state 27
    factor                go to state 28


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 29


State 3

    1 Program: compound_statement .

    $default  reduce using rule 1 (Program)


State 4

    9 statement: IF . LPAREN expression RPAREN statement
   10          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 30


State 5

    8 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 31


State 6

   11 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 32


State 7

   13 statement: RETURN . expression SEMICOLON

    ADDOP        shift, and go to state 8
    LPAREN       shift, and go to state 10
    CONST_INT    shift, and go to state 12
    CONST_FLOAT  shift, and go to state 13
    ID           shift, and go to state 14
    NOT          shift, and go to state 15

    variable           go to state 21
    expression         go to state 33
    logic_expression   go to state 23
    rel_expression     go to state 24
    simple_expression  go to state 25
    term               go to state 26
    unary_expression   go to state 27
    factor             go to state 28


State 8

   28 unary_expression: ADDOP . unary_expression

    ADDOP        shift, and go to state 8
    LPAREN       shift, and go to state 10
    CONST_INT    shift, and go to state 12
    CONST_FLOAT  shift, and go to state 13
    ID           shift, and go to state 14
    NOT          shift, and go to state 15

    variable          go to state 34
    unary_expression  go to state 35
    factor            go to state 28


State 9

   14 expression_statement: SEMICOLON .

    $default  reduce using rule 14 (expression_statement)


State 10

   32 factor: LPAREN . expression RPAREN

    ADDOP        shift, and go to state 8
    LPAREN       shift, and go to state 10
    CONST_INT    shift, and go to state 12
    CONST_FLOAT  shift, and go to state 13
    ID           shift, and go to state 14
    NOT          shift, and go to state 15

    variable           go to state 21
    expression         go to state 36
    logic_expression   go to state 23
    rel_expression     go to state 24
    simple_expression  go to state 25
    term               go to state 26
    unary_expression   go to state 27
    factor             go to state 28


State 11

    3 compound_statement: LCURL RCURL .

    $default  reduce using rule 3 (compound_statement)


State 12

   33 factor: CONST_INT .

    $default  reduce using rule 33 (factor)


State 13

   34 factor: CONST_FLOAT .

    $default  reduce using rule 34 (factor)


State 14

   16 variable: ID .
   17         | ID . LTHIRD expression RTHIRD

    LTHIRD  shift, and go to state 37

    $default  reduce using rule 16 (variable)


State 15

   29 unary_expression: NOT . unary_expression

    ADDOP        shift, and go to state 8
    LPAREN       shift, and go to state 10
    CONST_INT    shift, and go to state 12
    CONST_FLOAT  shift, and go to state 13
    ID           shift, and go to state 14
    NOT          shift, and go to state 15

    variable          go to state 34
    unary_expression  go to state 38
    factor            go to state 28


State 16

   12 statement: PRINTLN . LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 39


State 17

    7 statement: compound_statement .

    $default  reduce using rule 7 (statement)


State 18

    2 compound_statement: LCURL statements . RCURL
    5 statements: statements . statement

    IF           shift, and go to state 4
    FOR          shift, and go to state 5
    WHILE        shift, and go to state 6
    RETURN       shift, and go to state 7
    ADDOP        shift, and go to state 8
    SEMICOLON    shift, and go to state 9
    LPAREN       shift, and go to state 10
    LCURL        shift, and go to state 1
    RCURL        shift, and go to state 40
    CONST_INT    shift, and go to state 12
    CONST_FLOAT  shift, and go to state 13
    ID           shift, and go to state 14
    NOT          shift, and go to state 15
    PRINTLN      shift, and go to state 16

    compound_statement    go to state 17
    statement             go to state 41
    expression_statement  go to state 20
    variable              go to state 21
    expression            go to state 22
    logic_expression      go to state 23
    rel_expression        go to state 24
    simple_expression     go to state 25
    term                  go to state 26
    unary_expression      go to state 27
    factor                go to state 28


State 19

    4 statements: statement .

    $default  reduce using rule 4 (statements)


State 20

    6 statement: expression_statement .

    $default  reduce using rule 6 (statement)


State 21

   19 expression: variable . ASSIGNOP logic_expression
   31 factor: variable .
   35       | variable . INCOP

    ASSIGNOP  shift, and go to state 42
    INCOP     shift, and go to state 43

    $default  reduce using rule 31 (factor)


State 22

   15 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 44


State 23

   18 expression: logic_expression .

    $default  reduce using rule 18 (expression)


State 24

   20 logic_expression: rel_expression .
   21                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 45

    $default  reduce using rule 20 (logic_expression)


State 25

   22 rel_expression: simple_expression .
   23               | simple_expression . RELOP simple_expression
   25 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 46
    RELOP  shift, and go to state 47

    $default  reduce using rule 22 (rel_expression)


State 26

   24 simple_expression: term .
   27 term: term . MULOP unary_expression

    MULOP  shift, and go to state 48

    $default  reduce using rule 24 (simple_expression)


State 27

   26 term: unary_expression .

    $default  reduce using rule 26 (term)


State 28

   30 unary_expression: factor .

    $default  reduce using rule 30 (unary_expression)


State 29

    0 $accept: Program $end .

    $default  accept


State 30

    9 statement: IF LPAREN . expression RPAREN statement
   10          | IF LPAREN . expression RPAREN statement ELSE statement

    ADDOP        shift, and go to state 8
    LPAREN       shift, and go to state 10
    CONST_INT    shift, and go to state 12
    CONST_FLOAT  shift, and go to state 13
    ID           shift, and go to state 14
    NOT          shift, and go to state 15

    variable           go to state 21
    expression         go to state 49
    logic_expression   go to state 23
    rel_expression     go to state 24
    simple_expression  go to state 25
    term               go to state 26
    unary_expression   go to state 27
    factor             go to state 28


State 31

    8 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    ADDOP        shift, and go to state 8
    SEMICOLON    shift, and go to state 9
    LPAREN       shift, and go to state 10
    CONST_INT    shift, and go to state 12
    CONST_FLOAT  shift, and go to state 13
    ID           shift, and go to state 14
    NOT          shift, and go to state 15

    expression_statement  go to state 50
    variable              go to state 21
    expression            go to state 22
    logic_expression      go to state 23
    rel_expression        go to state 24
    simple_expression     go to state 25
    term                  go to state 26
    unary_expression      go to state 27
    factor                go to state 28


State 32

   11 statement: WHILE LPAREN . expression RPAREN statement

    ADDOP        shift, and go to state 8
    LPAREN       shift, and go to state 10
    CONST_INT    shift, and go to state 12
    CONST_FLOAT  shift, and go to state 13
    ID           shift, and go to state 14
    NOT          shift, and go to state 15

    variable           go to state 21
    expression         go to state 51
    logic_expression   go to state 23
    rel_expression     go to state 24
    simple_expression  go to state 25
    term               go to state 26
    unary_expression   go to state 27
    factor             go to state 28


State 33

   13 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 52


State 34

   31 factor: variable .
   35       | variable . INCOP

    INCOP  shift, and go to state 43

    $default  reduce using rule 31 (factor)


State 35

   28 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 28 (unary_expression)


State 36

   32 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 53


State 37

   17 variable: ID LTHIRD . expression RTHIRD

    ADDOP        shift, and go to state 8
    LPAREN       shift, and go to state 10
    CONST_INT    shift, and go to state 12
    CONST_FLOAT  shift, and go to state 13
    ID           shift, and go to state 14
    NOT          shift, and go to state 15

    variable           go to state 21
    expression         go to state 54
    logic_expression   go to state 23
    rel_expression     go to state 24
    simple_expression  go to state 25
    term               go to state 26
    unary_expression   go to state 27
    factor             go to state 28


State 38

   29 unary_expression: NOT unary_expression .

    $default  reduce using rule 29 (unary_expression)


State 39

   12 statement: PRINTLN LPAREN . ID RPAREN SEMICOLON

    ID  shift, and go to state 55


State 40

    2 compound_statement: LCURL statements RCURL .

    $default  reduce using rule 2 (compound_statement)


State 41

    5 statements: statements statement .

    $default  reduce using rule 5 (statements)


State 42

   19 expression: variable ASSIGNOP . logic_expression

    ADDOP        shift, and go to state 8
    LPAREN       shift, and go to state 10
    CONST_INT    shift, and go to state 12
    CONST_FLOAT  shift, and go to state 13
    ID           shift, and go to state 14
    NOT          shift, and go to state 15

    variable           go to state 34
    logic_expression   go to state 56
    rel_expression     go to state 24
    simple_expression  go to state 25
    term               go to state 26
    unary_expression   go to state 27
    factor             go to state 28


State 43

   35 factor: variable INCOP .

    $default  reduce using rule 35 (factor)


State 44

   15 expression_statement: expression SEMICOLON .

    $default  reduce using rule 15 (expression_statement)


State 45

   21 logic_expression: rel_expression LOGICOP . rel_expression

    ADDOP        shift, and go to state 8
    LPAREN       shift, and go to state 10
    CONST_INT    shift, and go to state 12
    CONST_FLOAT  shift, and go to state 13
    ID           shift, and go to state 14
    NOT          shift, and go to state 15

    variable           go to state 34
    rel_expression     go to state 57
    simple_expression  go to state 25
    term               go to state 26
    unary_expression   go to state 27
    factor             go to state 28


State 46

   25 simple_expression: simple_expression ADDOP . term

    ADDOP        shift, and go to state 8
    LPAREN       shift, and go to state 10
    CONST_INT    shift, and go to state 12
    CONST_FLOAT  shift, and go to state 13
    ID           shift, and go to state 14
    NOT          shift, and go to state 15

    variable          go to state 34
    term              go to state 58
    unary_expression  go to state 27
    factor            go to state 28


State 47

   23 rel_expression: simple_expression RELOP . simple_expression

    ADDOP        shift, and go to state 8
    LPAREN       shift, and go to state 10
    CONST_INT    shift, and go to state 12
    CONST_FLOAT  shift, and go to state 13
    ID           shift, and go to state 14
    NOT          shift, and go to state 15

    variable           go to state 34
    simple_expression  go to state 59
    term               go to state 26
    unary_expression   go to state 27
    factor             go to state 28


State 48

   27 term: term MULOP . unary_expression

    ADDOP        shift, and go to state 8
    LPAREN       shift, and go to state 10
    CONST_INT    shift, and go to state 12
    CONST_FLOAT  shift, and go to state 13
    ID           shift, and go to state 14
    NOT          shift, and go to state 15

    variable          go to state 34
    unary_expression  go to state 60
    factor            go to state 28


State 49

    9 statement: IF LPAREN expression . RPAREN statement
   10          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 61


State 50

    8 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    ADDOP        shift, and go to state 8
    SEMICOLON    shift, and go to state 9
    LPAREN       shift, and go to state 10
    CONST_INT    shift, and go to state 12
    CONST_FLOAT  shift, and go to state 13
    ID           shift, and go to state 14
    NOT          shift, and go to state 15

    expression_statement  go to state 62
    variable              go to state 21
    expression            go to state 22
    logic_expression      go to state 23
    rel_expression        go to state 24
    simple_expression     go to state 25
    term                  go to state 26
    unary_expression      go to state 27
    factor                go to state 28


State 51

   11 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 63


State 52

   13 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 13 (statement)


State 53

   32 factor: LPAREN expression RPAREN .

    $default  reduce using rule 32 (factor)


State 54

   17 variable: ID LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 64


State 55

   12 statement: PRINTLN LPAREN ID . RPAREN SEMICOLON

    RPAREN  shift, and go to state 65


State 56

   19 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 19 (expression)


State 57

   21 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 21 (logic_expression)


State 58

   25 simple_expression: simple_expression ADDOP term .
   27 term: term . MULOP unary_expression

    MULOP  shift, and go to state 48

    $default  reduce using rule 25 (simple_expression)


State 59

   23 rel_expression: simple_expression RELOP simple_expression .
   25 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 46

    $default  reduce using rule 23 (rel_expression)


State 60

   27 term: term MULOP unary_expression .

    $default  reduce using rule 27 (term)


State 61

    9 statement: IF LPAREN expression RPAREN . statement
   10          | IF LPAREN expression RPAREN . statement ELSE statement

    IF           shift, and go to state 4
    FOR          shift, and go to state 5
    WHILE        shift, and go to state 6
    RETURN       shift, and go to state 7
    ADDOP        shift, and go to state 8
    SEMICOLON    shift, and go to state 9
    LPAREN       shift, and go to state 10
    LCURL        shift, and go to state 1
    CONST_INT    shift, and go to state 12
    CONST_FLOAT  shift, and go to state 13
    ID           shift, and go to state 14
    NOT          shift, and go to state 15
    PRINTLN      shift, and go to state 16

    compound_statement    go to state 17
    statement             go to state 66
    expression_statement  go to state 20
    variable              go to state 21
    expression            go to state 22
    logic_expression      go to state 23
    rel_expression        go to state 24
    simple_expression     go to state 25
    term                  go to state 26
    unary_expression      go to state 27
    factor                go to state 28


State 62

    8 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    ADDOP        shift, and go to state 8
    LPAREN       shift, and go to state 10
    CONST_INT    shift, and go to state 12
    CONST_FLOAT  shift, and go to state 13
    ID           shift, and go to state 14
    NOT          shift, and go to state 15

    variable           go to state 21
    expression         go to state 67
    logic_expression   go to state 23
    rel_expression     go to state 24
    simple_expression  go to state 25
    term               go to state 26
    unary_expression   go to state 27
    factor             go to state 28


State 63

   11 statement: WHILE LPAREN expression RPAREN . statement

    IF           shift, and go to state 4
    FOR          shift, and go to state 5
    WHILE        shift, and go to state 6
    RETURN       shift, and go to state 7
    ADDOP        shift, and go to state 8
    SEMICOLON    shift, and go to state 9
    LPAREN       shift, and go to state 10
    LCURL        shift, and go to state 1
    CONST_INT    shift, and go to state 12
    CONST_FLOAT  shift, and go to state 13
    ID           shift, and go to state 14
    NOT          shift, and go to state 15
    PRINTLN      shift, and go to state 16

    compound_statement    go to state 17
    statement             go to state 68
    expression_statement  go to state 20
    variable              go to state 21
    expression            go to state 22
    logic_expression      go to state 23
    rel_expression        go to state 24
    simple_expression     go to state 25
    term                  go to state 26
    unary_expression      go to state 27
    factor                go to state 28


State 64

   17 variable: ID LTHIRD expression RTHIRD .

    $default  reduce using rule 17 (variable)


State 65

   12 statement: PRINTLN LPAREN ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 69


State 66

    9 statement: IF LPAREN expression RPAREN statement .
   10          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 70

    $default  reduce using rule 9 (statement)


State 67

    8 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 71


State 68

   11 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 11 (statement)


State 69

   12 statement: PRINTLN LPAREN ID RPAREN SEMICOLON .

    $default  reduce using rule 12 (statement)


State 70

   10 statement: IF LPAREN expression RPAREN statement ELSE . statement

    IF           shift, and go to state 4
    FOR          shift, and go to state 5
    WHILE        shift, and go to state 6
    RETURN       shift, and go to state 7
    ADDOP        shift, and go to state 8
    SEMICOLON    shift, and go to state 9
    LPAREN       shift, and go to state 10
    LCURL        shift, and go to state 1
    CONST_INT    shift, and go to state 12
    CONST_FLOAT  shift, and go to state 13
    ID           shift, and go to state 14
    NOT          shift, and go to state 15
    PRINTLN      shift, and go to state 16

    compound_statement    go to state 17
    statement             go to state 72
    expression_statement  go to state 20
    variable              go to state 21
    expression            go to state 22
    logic_expression      go to state 23
    rel_expression        go to state 24
    simple_expression     go to state 25
    term                  go to state 26
    unary_expression      go to state 27
    factor                go to state 28


State 71

    8 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    IF           shift, and go to state 4
    FOR          shift, and go to state 5
    WHILE        shift, and go to state 6
    RETURN       shift, and go to state 7
    ADDOP        shift, and go to state 8
    SEMICOLON    shift, and go to state 9
    LPAREN       shift, and go to state 10
    LCURL        shift, and go to state 1
    CONST_INT    shift, and go to state 12
    CONST_FLOAT  shift, and go to state 13
    ID           shift, and go to state 14
    NOT          shift, and go to state 15
    PRINTLN      shift, and go to state 16

    compound_statement    go to state 17
    statement             go to state 73
    expression_statement  go to state 20
    variable              go to state 21
    expression            go to state 22
    logic_expression      go to state 23
    rel_expression        go to state 24
    simple_expression     go to state 25
    term                  go to state 26
    unary_expression      go to state 27
    factor                go to state 28


State 72

   10 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 10 (statement)


State 73

    8 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 8 (statement)
