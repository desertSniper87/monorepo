Terminals unused in grammar

   DO
   BREAK
   CHAR
   DOUBLE
   SWITCH
   CASE
   DEFAULT
   CONTINUE
   CONST_CHAR
   STRING
   MAIN
   '+'
   '-'
   '*'
   '/'


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_declaration
    6     | func_definition

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON

    8 func_definition: type_specifier ID LPAREN parameter_list RPAREN compound_statement

    9 parameter_list: parameter_list COMMA type_specifier ID
   10               | parameter_list COMMA type_specifier
   11               | type_specifier ID
   12               | type_specifier
   13               | %empty

   14 compound_statement: LCURL statements RCURL
   15                   | LCURL RCURL

   16 var_declaration: type_specifier declaration_list SEMICOLON

   17 type_specifier: INT
   18               | FLOAT
   19               | VOID

   20 declaration_list: declaration_list COMMA ID
   21                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   22                 | ID
   23                 | ID LTHIRD CONST_INT RTHIRD

   24 statements: statement
   25           | statements statement

   26 statement: var_declaration
   27          | expression_statement
   28          | compound_statement
   29          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   30          | IF LPAREN expression RPAREN statement
   31          | IF LPAREN expression RPAREN statement ELSE statement
   32          | WHILE LPAREN expression RPAREN statement
   33          | PRINTLN LPAREN ID RPAREN SEMICOLON
   34          | RETURN expression SEMICOLON

   35 expression_statement: SEMICOLON
   36                     | expression SEMICOLON

   37 variable: ID
   38         | ID LTHIRD expression RTHIRD

   39 expression: logic_expression
   40           | variable ASSIGNOP logic_expression

   41 logic_expression: rel_expression
   42                 | rel_expression LOGICOP rel_expression

   43 rel_expression: simple_expression
   44               | simple_expression RELOP simple_expression

   45 simple_expression: term
   46                  | simple_expression ADDOP term

   47 term: unary_expression
   48     | term MULOP unary_expression

   49 unary_expression: ADDOP unary_expression
   50                 | NOT unary_expression
   51                 | factor

   52 factor: variable
   53       | ID LPAREN argument_list RPAREN
   54       | LPAREN expression RPAREN
   55       | CONST_INT
   56       | CONST_FLOAT
   57       | variable INCOP
   58       | variable DECOP

   59 argument_list: arguments
   60              | %empty

   61 arguments: arguments COMMA logic_expression
   62          | logic_expression


Terminals, with rules where they appear

$end (0) 0
'*' (42)
'+' (43)
'-' (45)
'/' (47)
error (256)
IF (258) 30 31
ELSE (259) 31
FOR (260) 29
WHILE (261) 32
DO (262)
BREAK (263)
INT (264) 17
CHAR (265)
FLOAT (266) 18
DOUBLE (267)
VOID (268) 19
RETURN (269) 34
SWITCH (270)
CASE (271)
DEFAULT (272)
CONTINUE (273)
CONST_INT (274) 21 23 55
CONST_FLOAT (275) 56
ADDOP (276) 46 49
MULOP (277) 48
INCOP (278) 57
DECOP (279) 58
ASSIGNOP (280) 40
RELOP (281) 44
LOGICOP (282) 42
NOT (283) 50
LPAREN (284) 7 8 29 30 31 32 33 53 54
RPAREN (285) 7 8 29 30 31 32 33 53 54
LCURL (286) 14 15
RCURL (287) 14 15
LTHIRD (288) 21 23 38
RTHIRD (289) 21 23 38
COMMA (290) 9 10 20 21 61
SEMICOLON (291) 7 16 33 34 35 36
CONST_CHAR (292)
STRING (293)
ID (294) 7 8 9 11 20 21 22 23 33 37 38 53
MAIN (295)
PRINTLN (296) 33
LOWER_THAN_ELSE (297)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
start (48)
    on left: 1, on right: 0
program (49)
    on left: 2 3, on right: 1 2
unit (50)
    on left: 4 5 6, on right: 2 3
func_declaration (51)
    on left: 7, on right: 5
func_definition (52)
    on left: 8, on right: 6
parameter_list (53)
    on left: 9 10 11 12 13, on right: 7 8 9 10
compound_statement (54)
    on left: 14 15, on right: 8 28
var_declaration (55)
    on left: 16, on right: 4 26
type_specifier (56)
    on left: 17 18 19, on right: 7 8 9 10 11 12 16
declaration_list (57)
    on left: 20 21 22 23, on right: 16 20 21
statements (58)
    on left: 24 25, on right: 14 25
statement (59)
    on left: 26 27 28 29 30 31 32 33 34, on right: 24 25 29 30 31 32
expression_statement (60)
    on left: 35 36, on right: 27 29
variable (61)
    on left: 37 38, on right: 40 52 57 58
expression (62)
    on left: 39 40, on right: 29 30 31 32 34 36 38 54
logic_expression (63)
    on left: 41 42, on right: 39 40 61 62
rel_expression (64)
    on left: 43 44, on right: 41 42
simple_expression (65)
    on left: 45 46, on right: 43 44 46
term (66)
    on left: 47 48, on right: 45 46 48
unary_expression (67)
    on left: 49 50 51, on right: 47 48 49 50
factor (68)
    on left: 52 53 54 55 56 57 58, on right: 51
argument_list (69)
    on left: 59 60, on right: 53
arguments (70)
    on left: 61 62, on right: 59 61


State 0

    0 $accept: . start $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    start             go to state 4
    program           go to state 5
    unit              go to state 6
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 1

   17 type_specifier: INT .

    $default  reduce using rule 17 (type_specifier)


State 2

   18 type_specifier: FLOAT .

    $default  reduce using rule 18 (type_specifier)


State 3

   19 type_specifier: VOID .

    $default  reduce using rule 19 (type_specifier)


State 4

    0 $accept: start . $end

    $end  shift, and go to state 11


State 5

    1 start: program .
    2 program: program . unit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit              go to state 12
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 6

    3 program: unit .

    $default  reduce using rule 3 (program)


State 7

    5 unit: func_declaration .

    $default  reduce using rule 5 (unit)


State 8

    6 unit: func_definition .

    $default  reduce using rule 6 (unit)


State 9

    4 unit: var_declaration .

    $default  reduce using rule 4 (unit)


State 10

    7 func_declaration: type_specifier . ID LPAREN parameter_list RPAREN SEMICOLON
    8 func_definition: type_specifier . ID LPAREN parameter_list RPAREN compound_statement
   16 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 13

    declaration_list  go to state 14


State 11

    0 $accept: start $end .

    $default  accept


State 12

    2 program: program unit .

    $default  reduce using rule 2 (program)


State 13

    7 func_declaration: type_specifier ID . LPAREN parameter_list RPAREN SEMICOLON
    8 func_definition: type_specifier ID . LPAREN parameter_list RPAREN compound_statement
   22 declaration_list: ID .
   23                 | ID . LTHIRD CONST_INT RTHIRD

    LPAREN  shift, and go to state 15
    LTHIRD  shift, and go to state 16

    $default  reduce using rule 22 (declaration_list)


State 14

   16 var_declaration: type_specifier declaration_list . SEMICOLON
   20 declaration_list: declaration_list . COMMA ID
   21                 | declaration_list . COMMA ID LTHIRD CONST_INT RTHIRD

    COMMA      shift, and go to state 17
    SEMICOLON  shift, and go to state 18


State 15

    7 func_declaration: type_specifier ID LPAREN . parameter_list RPAREN SEMICOLON
    8 func_definition: type_specifier ID LPAREN . parameter_list RPAREN compound_statement

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 13 (parameter_list)

    parameter_list  go to state 19
    type_specifier  go to state 20


State 16

   23 declaration_list: ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 21


State 17

   20 declaration_list: declaration_list COMMA . ID
   21                 | declaration_list COMMA . ID LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 22


State 18

   16 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 16 (var_declaration)


State 19

    7 func_declaration: type_specifier ID LPAREN parameter_list . RPAREN SEMICOLON
    8 func_definition: type_specifier ID LPAREN parameter_list . RPAREN compound_statement
    9 parameter_list: parameter_list . COMMA type_specifier ID
   10               | parameter_list . COMMA type_specifier

    RPAREN  shift, and go to state 23
    COMMA   shift, and go to state 24


State 20

   11 parameter_list: type_specifier . ID
   12               | type_specifier .

    ID  shift, and go to state 25

    $default  reduce using rule 12 (parameter_list)


State 21

   23 declaration_list: ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 26


State 22

   20 declaration_list: declaration_list COMMA ID .
   21                 | declaration_list COMMA ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 27

    $default  reduce using rule 20 (declaration_list)


State 23

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN . SEMICOLON
    8 func_definition: type_specifier ID LPAREN parameter_list RPAREN . compound_statement

    LCURL      shift, and go to state 28
    SEMICOLON  shift, and go to state 29

    compound_statement  go to state 30


State 24

    9 parameter_list: parameter_list COMMA . type_specifier ID
   10               | parameter_list COMMA . type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 31


State 25

   11 parameter_list: type_specifier ID .

    $default  reduce using rule 11 (parameter_list)


State 26

   23 declaration_list: ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 23 (declaration_list)


State 27

   21 declaration_list: declaration_list COMMA ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 32


State 28

   14 compound_statement: LCURL . statements RCURL
   15                   | LCURL . RCURL

    IF           shift, and go to state 33
    FOR          shift, and go to state 34
    WHILE        shift, and go to state 35
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 36
    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    LCURL        shift, and go to state 28
    RCURL        shift, and go to state 42
    SEMICOLON    shift, and go to state 43
    ID           shift, and go to state 44
    PRINTLN      shift, and go to state 45

    compound_statement    go to state 46
    var_declaration       go to state 47
    type_specifier        go to state 48
    statements            go to state 49
    statement             go to state 50
    expression_statement  go to state 51
    variable              go to state 52
    expression            go to state 53
    logic_expression      go to state 54
    rel_expression        go to state 55
    simple_expression     go to state 56
    term                  go to state 57
    unary_expression      go to state 58
    factor                go to state 59


State 29

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON .

    $default  reduce using rule 7 (func_declaration)


State 30

    8 func_definition: type_specifier ID LPAREN parameter_list RPAREN compound_statement .

    $default  reduce using rule 8 (func_definition)


State 31

    9 parameter_list: parameter_list COMMA type_specifier . ID
   10               | parameter_list COMMA type_specifier .

    ID  shift, and go to state 60

    $default  reduce using rule 10 (parameter_list)


State 32

   21 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 61


State 33

   30 statement: IF . LPAREN expression RPAREN statement
   31          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 62


State 34

   29 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 63


State 35

   32 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 64


State 36

   34 statement: RETURN . expression SEMICOLON

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    ID           shift, and go to state 44

    variable           go to state 52
    expression         go to state 65
    logic_expression   go to state 54
    rel_expression     go to state 55
    simple_expression  go to state 56
    term               go to state 57
    unary_expression   go to state 58
    factor             go to state 59


State 37

   55 factor: CONST_INT .

    $default  reduce using rule 55 (factor)


State 38

   56 factor: CONST_FLOAT .

    $default  reduce using rule 56 (factor)


State 39

   49 unary_expression: ADDOP . unary_expression

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    ID           shift, and go to state 44

    variable          go to state 66
    unary_expression  go to state 67
    factor            go to state 59


State 40

   50 unary_expression: NOT . unary_expression

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    ID           shift, and go to state 44

    variable          go to state 66
    unary_expression  go to state 68
    factor            go to state 59


State 41

   54 factor: LPAREN . expression RPAREN

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    ID           shift, and go to state 44

    variable           go to state 52
    expression         go to state 69
    logic_expression   go to state 54
    rel_expression     go to state 55
    simple_expression  go to state 56
    term               go to state 57
    unary_expression   go to state 58
    factor             go to state 59


State 42

   15 compound_statement: LCURL RCURL .

    $default  reduce using rule 15 (compound_statement)


State 43

   35 expression_statement: SEMICOLON .

    $default  reduce using rule 35 (expression_statement)


State 44

   37 variable: ID .
   38         | ID . LTHIRD expression RTHIRD
   53 factor: ID . LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 70
    LTHIRD  shift, and go to state 71

    $default  reduce using rule 37 (variable)


State 45

   33 statement: PRINTLN . LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 72


State 46

   28 statement: compound_statement .

    $default  reduce using rule 28 (statement)


State 47

   26 statement: var_declaration .

    $default  reduce using rule 26 (statement)


State 48

   16 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 73

    declaration_list  go to state 14


State 49

   14 compound_statement: LCURL statements . RCURL
   25 statements: statements . statement

    IF           shift, and go to state 33
    FOR          shift, and go to state 34
    WHILE        shift, and go to state 35
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 36
    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    LCURL        shift, and go to state 28
    RCURL        shift, and go to state 74
    SEMICOLON    shift, and go to state 43
    ID           shift, and go to state 44
    PRINTLN      shift, and go to state 45

    compound_statement    go to state 46
    var_declaration       go to state 47
    type_specifier        go to state 48
    statement             go to state 75
    expression_statement  go to state 51
    variable              go to state 52
    expression            go to state 53
    logic_expression      go to state 54
    rel_expression        go to state 55
    simple_expression     go to state 56
    term                  go to state 57
    unary_expression      go to state 58
    factor                go to state 59


State 50

   24 statements: statement .

    $default  reduce using rule 24 (statements)


State 51

   27 statement: expression_statement .

    $default  reduce using rule 27 (statement)


State 52

   40 expression: variable . ASSIGNOP logic_expression
   52 factor: variable .
   57       | variable . INCOP
   58       | variable . DECOP

    INCOP     shift, and go to state 76
    DECOP     shift, and go to state 77
    ASSIGNOP  shift, and go to state 78

    $default  reduce using rule 52 (factor)


State 53

   36 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 79


State 54

   39 expression: logic_expression .

    $default  reduce using rule 39 (expression)


State 55

   41 logic_expression: rel_expression .
   42                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 80

    $default  reduce using rule 41 (logic_expression)


State 56

   43 rel_expression: simple_expression .
   44               | simple_expression . RELOP simple_expression
   46 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 81
    RELOP  shift, and go to state 82

    $default  reduce using rule 43 (rel_expression)


State 57

   45 simple_expression: term .
   48 term: term . MULOP unary_expression

    MULOP  shift, and go to state 83

    $default  reduce using rule 45 (simple_expression)


State 58

   47 term: unary_expression .

    $default  reduce using rule 47 (term)


State 59

   51 unary_expression: factor .

    $default  reduce using rule 51 (unary_expression)


State 60

    9 parameter_list: parameter_list COMMA type_specifier ID .

    $default  reduce using rule 9 (parameter_list)


State 61

   21 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 21 (declaration_list)


State 62

   30 statement: IF LPAREN . expression RPAREN statement
   31          | IF LPAREN . expression RPAREN statement ELSE statement

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    ID           shift, and go to state 44

    variable           go to state 52
    expression         go to state 84
    logic_expression   go to state 54
    rel_expression     go to state 55
    simple_expression  go to state 56
    term               go to state 57
    unary_expression   go to state 58
    factor             go to state 59


State 63

   29 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    SEMICOLON    shift, and go to state 43
    ID           shift, and go to state 44

    expression_statement  go to state 85
    variable              go to state 52
    expression            go to state 53
    logic_expression      go to state 54
    rel_expression        go to state 55
    simple_expression     go to state 56
    term                  go to state 57
    unary_expression      go to state 58
    factor                go to state 59


State 64

   32 statement: WHILE LPAREN . expression RPAREN statement

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    ID           shift, and go to state 44

    variable           go to state 52
    expression         go to state 86
    logic_expression   go to state 54
    rel_expression     go to state 55
    simple_expression  go to state 56
    term               go to state 57
    unary_expression   go to state 58
    factor             go to state 59


State 65

   34 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 87


State 66

   52 factor: variable .
   57       | variable . INCOP
   58       | variable . DECOP

    INCOP  shift, and go to state 76
    DECOP  shift, and go to state 77

    $default  reduce using rule 52 (factor)


State 67

   49 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 49 (unary_expression)


State 68

   50 unary_expression: NOT unary_expression .

    $default  reduce using rule 50 (unary_expression)


State 69

   54 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 88


State 70

   53 factor: ID LPAREN . argument_list RPAREN

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    ID           shift, and go to state 44

    $default  reduce using rule 60 (argument_list)

    variable           go to state 66
    logic_expression   go to state 89
    rel_expression     go to state 55
    simple_expression  go to state 56
    term               go to state 57
    unary_expression   go to state 58
    factor             go to state 59
    argument_list      go to state 90
    arguments          go to state 91


State 71

   38 variable: ID LTHIRD . expression RTHIRD

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    ID           shift, and go to state 44

    variable           go to state 52
    expression         go to state 92
    logic_expression   go to state 54
    rel_expression     go to state 55
    simple_expression  go to state 56
    term               go to state 57
    unary_expression   go to state 58
    factor             go to state 59


State 72

   33 statement: PRINTLN LPAREN . ID RPAREN SEMICOLON

    ID  shift, and go to state 93


State 73

   22 declaration_list: ID .
   23                 | ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 16

    $default  reduce using rule 22 (declaration_list)


State 74

   14 compound_statement: LCURL statements RCURL .

    $default  reduce using rule 14 (compound_statement)


State 75

   25 statements: statements statement .

    $default  reduce using rule 25 (statements)


State 76

   57 factor: variable INCOP .

    $default  reduce using rule 57 (factor)


State 77

   58 factor: variable DECOP .

    $default  reduce using rule 58 (factor)


State 78

   40 expression: variable ASSIGNOP . logic_expression

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    ID           shift, and go to state 44

    variable           go to state 66
    logic_expression   go to state 94
    rel_expression     go to state 55
    simple_expression  go to state 56
    term               go to state 57
    unary_expression   go to state 58
    factor             go to state 59


State 79

   36 expression_statement: expression SEMICOLON .

    $default  reduce using rule 36 (expression_statement)


State 80

   42 logic_expression: rel_expression LOGICOP . rel_expression

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    ID           shift, and go to state 44

    variable           go to state 66
    rel_expression     go to state 95
    simple_expression  go to state 56
    term               go to state 57
    unary_expression   go to state 58
    factor             go to state 59


State 81

   46 simple_expression: simple_expression ADDOP . term

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    ID           shift, and go to state 44

    variable          go to state 66
    term              go to state 96
    unary_expression  go to state 58
    factor            go to state 59


State 82

   44 rel_expression: simple_expression RELOP . simple_expression

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    ID           shift, and go to state 44

    variable           go to state 66
    simple_expression  go to state 97
    term               go to state 57
    unary_expression   go to state 58
    factor             go to state 59


State 83

   48 term: term MULOP . unary_expression

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    ID           shift, and go to state 44

    variable          go to state 66
    unary_expression  go to state 98
    factor            go to state 59


State 84

   30 statement: IF LPAREN expression . RPAREN statement
   31          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 99


State 85

   29 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    SEMICOLON    shift, and go to state 43
    ID           shift, and go to state 44

    expression_statement  go to state 100
    variable              go to state 52
    expression            go to state 53
    logic_expression      go to state 54
    rel_expression        go to state 55
    simple_expression     go to state 56
    term                  go to state 57
    unary_expression      go to state 58
    factor                go to state 59


State 86

   32 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 101


State 87

   34 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 34 (statement)


State 88

   54 factor: LPAREN expression RPAREN .

    $default  reduce using rule 54 (factor)


State 89

   62 arguments: logic_expression .

    $default  reduce using rule 62 (arguments)


State 90

   53 factor: ID LPAREN argument_list . RPAREN

    RPAREN  shift, and go to state 102


State 91

   59 argument_list: arguments .
   61 arguments: arguments . COMMA logic_expression

    COMMA  shift, and go to state 103

    $default  reduce using rule 59 (argument_list)


State 92

   38 variable: ID LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 104


State 93

   33 statement: PRINTLN LPAREN ID . RPAREN SEMICOLON

    RPAREN  shift, and go to state 105


State 94

   40 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 40 (expression)


State 95

   42 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 42 (logic_expression)


State 96

   46 simple_expression: simple_expression ADDOP term .
   48 term: term . MULOP unary_expression

    MULOP  shift, and go to state 83

    $default  reduce using rule 46 (simple_expression)


State 97

   44 rel_expression: simple_expression RELOP simple_expression .
   46 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 81

    $default  reduce using rule 44 (rel_expression)


State 98

   48 term: term MULOP unary_expression .

    $default  reduce using rule 48 (term)


State 99

   30 statement: IF LPAREN expression RPAREN . statement
   31          | IF LPAREN expression RPAREN . statement ELSE statement

    IF           shift, and go to state 33
    FOR          shift, and go to state 34
    WHILE        shift, and go to state 35
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 36
    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    LCURL        shift, and go to state 28
    SEMICOLON    shift, and go to state 43
    ID           shift, and go to state 44
    PRINTLN      shift, and go to state 45

    compound_statement    go to state 46
    var_declaration       go to state 47
    type_specifier        go to state 48
    statement             go to state 106
    expression_statement  go to state 51
    variable              go to state 52
    expression            go to state 53
    logic_expression      go to state 54
    rel_expression        go to state 55
    simple_expression     go to state 56
    term                  go to state 57
    unary_expression      go to state 58
    factor                go to state 59


State 100

   29 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    ID           shift, and go to state 44

    variable           go to state 52
    expression         go to state 107
    logic_expression   go to state 54
    rel_expression     go to state 55
    simple_expression  go to state 56
    term               go to state 57
    unary_expression   go to state 58
    factor             go to state 59


State 101

   32 statement: WHILE LPAREN expression RPAREN . statement

    IF           shift, and go to state 33
    FOR          shift, and go to state 34
    WHILE        shift, and go to state 35
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 36
    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    LCURL        shift, and go to state 28
    SEMICOLON    shift, and go to state 43
    ID           shift, and go to state 44
    PRINTLN      shift, and go to state 45

    compound_statement    go to state 46
    var_declaration       go to state 47
    type_specifier        go to state 48
    statement             go to state 108
    expression_statement  go to state 51
    variable              go to state 52
    expression            go to state 53
    logic_expression      go to state 54
    rel_expression        go to state 55
    simple_expression     go to state 56
    term                  go to state 57
    unary_expression      go to state 58
    factor                go to state 59


State 102

   53 factor: ID LPAREN argument_list RPAREN .

    $default  reduce using rule 53 (factor)


State 103

   61 arguments: arguments COMMA . logic_expression

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    ID           shift, and go to state 44

    variable           go to state 66
    logic_expression   go to state 109
    rel_expression     go to state 55
    simple_expression  go to state 56
    term               go to state 57
    unary_expression   go to state 58
    factor             go to state 59


State 104

   38 variable: ID LTHIRD expression RTHIRD .

    $default  reduce using rule 38 (variable)


State 105

   33 statement: PRINTLN LPAREN ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 110


State 106

   30 statement: IF LPAREN expression RPAREN statement .
   31          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 111

    $default  reduce using rule 30 (statement)


State 107

   29 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 112


State 108

   32 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 32 (statement)


State 109

   61 arguments: arguments COMMA logic_expression .

    $default  reduce using rule 61 (arguments)


State 110

   33 statement: PRINTLN LPAREN ID RPAREN SEMICOLON .

    $default  reduce using rule 33 (statement)


State 111

   31 statement: IF LPAREN expression RPAREN statement ELSE . statement

    IF           shift, and go to state 33
    FOR          shift, and go to state 34
    WHILE        shift, and go to state 35
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 36
    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    LCURL        shift, and go to state 28
    SEMICOLON    shift, and go to state 43
    ID           shift, and go to state 44
    PRINTLN      shift, and go to state 45

    compound_statement    go to state 46
    var_declaration       go to state 47
    type_specifier        go to state 48
    statement             go to state 113
    expression_statement  go to state 51
    variable              go to state 52
    expression            go to state 53
    logic_expression      go to state 54
    rel_expression        go to state 55
    simple_expression     go to state 56
    term                  go to state 57
    unary_expression      go to state 58
    factor                go to state 59


State 112

   29 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    IF           shift, and go to state 33
    FOR          shift, and go to state 34
    WHILE        shift, and go to state 35
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 36
    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    ADDOP        shift, and go to state 39
    NOT          shift, and go to state 40
    LPAREN       shift, and go to state 41
    LCURL        shift, and go to state 28
    SEMICOLON    shift, and go to state 43
    ID           shift, and go to state 44
    PRINTLN      shift, and go to state 45

    compound_statement    go to state 46
    var_declaration       go to state 47
    type_specifier        go to state 48
    statement             go to state 114
    expression_statement  go to state 51
    variable              go to state 52
    expression            go to state 53
    logic_expression      go to state 54
    rel_expression        go to state 55
    simple_expression     go to state 56
    term                  go to state 57
    unary_expression      go to state 58
    factor                go to state 59


State 113

   31 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 31 (statement)


State 114

   29 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 29 (statement)
